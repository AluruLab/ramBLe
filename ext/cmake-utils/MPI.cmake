
#### MPI
OPTION(USE_MPI "Build with MPI support" ON)
if (USE_MPI)
  find_package(MPI REQUIRED)
else(USE_MPI)
  set(MPI_FOUND 0)
endif(USE_MPI)

if (MPI_FOUND)
  message(STATUS "Found MPI:")
  message(STATUS "    headers: ${MPI_INCLUDE_PATH}")
  message(STATUS "    libs:    ${MPI_LIBRARIES}")
  include_directories(${MPI_INCLUDE_PATH})
  add_definitions(${MPI_COMPILE_FLAGS})
  set(CMAKE_EXE_LINK_FLAGS "${CMAKE_EXE_LINK_FLAGS} ${MPI_LINK_FLAGS}")
  set(CMAKE_MODULE_LINK_FLAGS "${CMAKE_MODULE_LINK_FLAGS} ${MPI_LINK_FLAGS}")
  set(CMAKE_SHARED_LINK_FLAGS "${CMAKE_SHARED_LINK_FLAGS} ${MPI_LINK_FLAGS}")
  set(CMAKE_STATIC_LINK_FLAGS "${CMAKE_STATIC_LINK_FLAGS} ${MPI_LINK_FLAGS}")
  set(MPI_DEFINE "#define USE_MPI")
  set(EXTRA_LIBS ${EXTRA_LIBS} ${MPI_LIBRARIES})
  set(ENV{OMPI_CC} ${CMAKE_C_COMPILER})
  set(ENV{OMPI_CXX} ${CMAKE_CXX_COMPILER})
  mark_as_advanced(MPI_EXTRA_LIBRARY MPI_LIBRARY)
else (MPI_FOUND)
  set(MPI_DEFINE "")
endif (MPI_FOUND)
